#! /bin/bash

USAGE='git fixup [-h] [-a] COMMIT|FILEPATH
  -h	display this message

  Create a fixup commit with the supplied id, or a fixup commit against the
  most recent change to the supplied file'

while getopts 'h' options
do
	case $options in
		h ) echo "$USAGE" && exit 1;;
	esac
done
shift $((OPTIND-1))


# determine if param $1 is a file
if git cat-file -e "$1" 2>/dev/null; then
	# if not file, verify supplied git commit with rev-parse
	COMMIT_ID=$(git rev-parse "$1")

	# if target commit is fixup!, use commit targetted by the fixup
	COMMIT_ID=$(git log -1 "$1" --oneline | awk '{ if (/fixup/) {print $3} else {print $1} }')
else
	# else if a file: so fixup the last non-fixup commit to the file
	COMMIT_ID=$(git log --format='%h %s' -- "$1" | awk '! /fixup!/ {print $1}' | head -1)
fi

if [[ -z $COMMIT_ID ]]; then
	echo "Unknown reference: $1"
	exit 1
fi

git commit -m "fixup! $COMMIT_ID"
