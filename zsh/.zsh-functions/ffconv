#! /bin/zsh
#
USAGE='Usage: ffconv movie-file [-f] [-A]
  -f force a re-encode, even if h264 and aac present'

if [[ $# -eq 0 ]]; then
	echo $USAGE
	return 1
fi

FORCE=0
DROP_AUDIO=0

while getopts 'fA' params
do
	case $params in
		f ) FORCE=1;;
		A ) DROP_AUDIO=1;;
		\? ) echo $USAGE
			 return 1;;
		* ) echo $USAGE
			return 1;;
	esac
done
shift $(($OPTIND-1))

if [[ $FORCE -eq 0 ]]; then
	# analyse input file to determine existing stream types
	VCODEC=$(ffprobe "$1" 2>&1 | awk '/Stream.*Video:/ {print $4}')
	ACODEC=$(ffprobe "$1" 2>&1 | awk '/Stream.*Audio:/ {print $4}')
fi

# convert both video and audio
if [[ $VCODEC != 'h264' && $ACODEC != 'aac' ]] || [[ $FORCE -eq 1 ]] || [[ $DROP_AUDIO -eq 1 ]]; then
	if [[ $DROP_AUDIO -eq 1 ]]; then
		time ffmpeg -i "$1" -c:v libx264 -filter:v yadif -crf 21 -level 3.1 -tune film -an "$1.mp4"
	else
		time ffmpeg -i "$1" -c:v libx264 -filter:v yadif -crf 21 -level 3.1 -tune film -c:a libfaac -q:a 100 "$1.mp4"
	fi

# convert just video
elif [[ $VCODEC != 'h264' ]]; then
	if [[ $DROP_AUDIO -eq 1 ]]; then
		time ffmpeg -i "$1" -c:v libx264 -filter:v yadif -crf 21 -level 3.1 -tune film -an "$1.mp4"
	else
		time ffmpeg -i "$1" -c:v libx264 -filter:v yadif -crf 21 -level 3.1 -tune film -c:a copy "$1.mp4"
	fi

# convert just audio
elif [[ $ACODEC != 'aac' ]]; then
	time ffmpeg -i "$1" -c:v copy -c:a libfaac -q:a 100 "$1.mp4"

# do nothing for h264/aac MP4 input
elif [[ ${1##*.} == 'mp4' ]]; then
	print 'Nothing to do'

# convert neither; just switch container to MP4
else
	time ffmpeg -i "$1" -c copy "$1.mp4"
fi
