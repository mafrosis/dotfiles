#! /bin/zsh

USAGE='Usage: flac-to-mp3 [OPTS] PATH
  -h	display this message

  Encode FLACs into MP3 with V0 VBR'

while getopts 'h' params
do
	case $params in
		h ) echo "$USAGE" && return 1;;
		* ) echo "$USAGE" && return 1;;
	esac
done
shift $((OPTIND-1))

##################################################

if [[ $# -eq 0 ]]; then
	echo $USAGE
	return 1
fi

function error {
	>&2 echo -e "\e[31m$1\e[0m"
}

function debug {
	# DEBUG logging controlled by env var
	if [[ -n $DEBUG ]]; then
		>&2 echo -e "\e[33m$1\e[0m"
	fi
}

function prompt_no {
	local message=$1

	echo "\n$message [y/N]"
	read -r y
	if [[ $y == y ]]; then
		return 0
	else
		return 1
	fi
}

function zshexit {
	echo rm -rf $TMPDIR
}

##################################################

function main {
	local source_path=$1

	# Expand dot into current directory
	if [[ $source_path == '.' ]]; then
		source_path=$(pwd)
	fi

	# Create a temporary directory
	TMPDIR=$(mktemp -d)
	pushd $TMPDIR

	# Iterate MP3s in the source directory, decoding into the temp directory
	for f in $source_path/*.mp3; do
		local fn=$(basename $f)

		if ! lame --decode $source_path/$fn; then
			error "Failed FLAC decode on $F"
			return 2
		fi
	done

	# Iterate WAVs in the temp directory, encoding into the source directory
	for F in *.wav; do
		if ! lame -V0 $F $source_path/${F%.*}.mp3; then
			error "Failed LAME encode on $F"
			return 3
		fi
	done
	popd

	# remove source files?
	if prompt_no "Do you want to delete the source FLACs in $(pwd)? [y/N]"; then
		rm -f -- *.flac
	fi

	if [ -f Folder.jpg ]; then
		mv Folder.jpg folder.jpg
	elif [ ! -f folder.jpg ]; then
		error 'Album art not found.'
	fi

	# auto-tag?
	if prompt_no 'Do you want run auto-tag now? [y/N]'; then
		eyeD3 --plugin autotag .
	fi
}
return $(main $1)
